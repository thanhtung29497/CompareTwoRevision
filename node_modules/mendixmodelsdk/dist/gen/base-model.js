"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var abstract_model_1 = require("../sdk/internal/abstract-model");
/**
 * Class to find generated model units.
 */
var BaseModel = (function (_super) {
    __extends(BaseModel, _super);
    function BaseModel() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BaseModel.prototype.allConstants = function () {
        return _super.prototype._allOfTypes.call(this, [
            "Constants$Constant"
        ]);
    };
    BaseModel.prototype.allConsumedAppServices = function () {
        return _super.prototype._allOfTypes.call(this, [
            "AppServices$ConsumedAppService"
        ]);
    };
    BaseModel.prototype.allDataSets = function () {
        return _super.prototype._allOfTypes.call(this, [
            "DataSets$DataSet"
        ]);
    };
    BaseModel.prototype.allDocuments = function () {
        return _super.prototype._allOfTypes.call(this, [
            "AppServices$ConsumedAppService", "Constants$Constant", "DataSets$DataSet", "DocumentTemplates$DocumentTemplate", "Enumerations$Enumeration", "ExportMappings$ExportMapping", "Images$ImageCollection", "ImportMappings$ImportMapping", "JavaActions$JavaAction", "JsonStructures$JsonStructure", "Menus$MenuDocument", "Microflows$Microflow", "Microflows$Rule", "Pages$Layout", "Pages$Page", "Pages$Snippet", "RegularExpressions$RegularExpression", "Rest$PublishedODataService", "Rest$PublishedRestService", "ScheduledEvents$ScheduledEvent", "WebServices$ImportedWebService", "WebServices$PublishedAppService", "WebServices$PublishedWebService", "XmlSchemas$XmlSchema"
        ]);
    };
    BaseModel.prototype.allDocumentTemplates = function () {
        return _super.prototype._allOfTypes.call(this, [
            "DocumentTemplates$DocumentTemplate"
        ]);
    };
    BaseModel.prototype.allDomainModels = function () {
        return _super.prototype._allOfTypes.call(this, [
            "DomainModels$DomainModel"
        ]);
    };
    BaseModel.prototype.allEnumerations = function () {
        return _super.prototype._allOfTypes.call(this, [
            "Enumerations$Enumeration"
        ]);
    };
    BaseModel.prototype.allExportMappings = function () {
        return _super.prototype._allOfTypes.call(this, [
            "ExportMappings$ExportMapping"
        ]);
    };
    BaseModel.prototype.allFolders = function () {
        return _super.prototype._allOfTypes.call(this, [
            "Projects$Folder"
        ]);
    };
    BaseModel.prototype.allFolderBases = function () {
        return _super.prototype._allOfTypes.call(this, [
            "Projects$Folder", "Projects$Module"
        ]);
    };
    BaseModel.prototype.allFormBases = function () {
        return _super.prototype._allOfTypes.call(this, [
            "Pages$Layout", "Pages$Page", "Pages$Snippet"
        ]);
    };
    BaseModel.prototype.allImageCollections = function () {
        return _super.prototype._allOfTypes.call(this, [
            "Images$ImageCollection"
        ]);
    };
    BaseModel.prototype.allImportMappings = function () {
        return _super.prototype._allOfTypes.call(this, [
            "ImportMappings$ImportMapping"
        ]);
    };
    BaseModel.prototype.allImportedWebServices = function () {
        return _super.prototype._allOfTypes.call(this, [
            "WebServices$ImportedWebService"
        ]);
    };
    BaseModel.prototype.allJavaActions = function () {
        return _super.prototype._allOfTypes.call(this, [
            "JavaActions$JavaAction"
        ]);
    };
    BaseModel.prototype.allJsonStructures = function () {
        return _super.prototype._allOfTypes.call(this, [
            "JsonStructures$JsonStructure"
        ]);
    };
    BaseModel.prototype.allLayouts = function () {
        return _super.prototype._allOfTypes.call(this, [
            "Pages$Layout"
        ]);
    };
    BaseModel.prototype.allMappingDocuments = function () {
        return _super.prototype._allOfTypes.call(this, [
            "ExportMappings$ExportMapping", "ImportMappings$ImportMapping"
        ]);
    };
    BaseModel.prototype.allMenuDocuments = function () {
        return _super.prototype._allOfTypes.call(this, [
            "Menus$MenuDocument"
        ]);
    };
    BaseModel.prototype.allMicroflows = function () {
        return _super.prototype._allOfTypes.call(this, [
            "Microflows$Microflow"
        ]);
    };
    BaseModel.prototype.allMicroflowBases = function () {
        return _super.prototype._allOfTypes.call(this, [
            "Microflows$Microflow", "Microflows$Rule"
        ]);
    };
    BaseModel.prototype.allModules = function () {
        return _super.prototype._allOfTypes.call(this, [
            "Projects$Module"
        ]);
    };
    BaseModel.prototype.allModuleDocuments = function () {
        return _super.prototype._allOfTypes.call(this, [
            "AppServices$ConsumedAppService", "Constants$Constant", "DataSets$DataSet", "DocumentTemplates$DocumentTemplate", "DomainModels$DomainModel", "Enumerations$Enumeration", "ExportMappings$ExportMapping", "Images$ImageCollection", "ImportMappings$ImportMapping", "JavaActions$JavaAction", "JsonStructures$JsonStructure", "Menus$MenuDocument", "Microflows$Microflow", "Microflows$Rule", "Pages$Layout", "Pages$Page", "Pages$Snippet", "RegularExpressions$RegularExpression", "Rest$PublishedODataService", "Rest$PublishedRestService", "ScheduledEvents$ScheduledEvent", "WebServices$ImportedWebService", "WebServices$PublishedAppService", "WebServices$PublishedWebService", "XmlSchemas$XmlSchema"
        ]);
    };
    BaseModel.prototype.allModuleSecurities = function () {
        return _super.prototype._allOfTypes.call(this, [
            "Security$ModuleSecurity"
        ]);
    };
    BaseModel.prototype.allMxSchemas = function () {
        return _super.prototype._allOfTypes.call(this, [
            "JsonStructures$JsonStructure", "XmlSchemas$XmlSchema"
        ]);
    };
    BaseModel.prototype.allNavigationDocuments = function () {
        return _super.prototype._allOfTypes.call(this, [
            "Navigation$NavigationDocument"
        ]);
    };
    BaseModel.prototype.allPages = function () {
        return _super.prototype._allOfTypes.call(this, [
            "Pages$Page"
        ]);
    };
    BaseModel.prototype.allProjects = function () {
        return _super.prototype._allOfTypes.call(this, [
            "Projects$Project"
        ]);
    };
    BaseModel.prototype.allProjectConversions = function () {
        return _super.prototype._allOfTypes.call(this, [
            "Projects$ProjectConversion"
        ]);
    };
    BaseModel.prototype.allProjectDocuments = function () {
        return _super.prototype._allOfTypes.call(this, [
            "Navigation$NavigationDocument", "Security$ProjectSecurity", "Settings$ProjectSettings", "Texts$SystemTextCollection"
        ]);
    };
    BaseModel.prototype.allProjectSecurities = function () {
        return _super.prototype._allOfTypes.call(this, [
            "Security$ProjectSecurity"
        ]);
    };
    BaseModel.prototype.allProjectSettings = function () {
        return _super.prototype._allOfTypes.call(this, [
            "Settings$ProjectSettings"
        ]);
    };
    BaseModel.prototype.allPublishedAppServices = function () {
        return _super.prototype._allOfTypes.call(this, [
            "WebServices$PublishedAppService"
        ]);
    };
    BaseModel.prototype.allPublishedODataServices = function () {
        return _super.prototype._allOfTypes.call(this, [
            "Rest$PublishedODataService"
        ]);
    };
    BaseModel.prototype.allPublishedRestServices = function () {
        return _super.prototype._allOfTypes.call(this, [
            "Rest$PublishedRestService"
        ]);
    };
    BaseModel.prototype.allPublishedRestServiceBases = function () {
        return _super.prototype._allOfTypes.call(this, [
            "Rest$PublishedODataService", "Rest$PublishedRestService"
        ]);
    };
    BaseModel.prototype.allPublishedServiceBases = function () {
        return _super.prototype._allOfTypes.call(this, [
            "WebServices$PublishedAppService", "WebServices$PublishedWebService"
        ]);
    };
    BaseModel.prototype.allPublishedWebServices = function () {
        return _super.prototype._allOfTypes.call(this, [
            "WebServices$PublishedWebService"
        ]);
    };
    BaseModel.prototype.allRegularExpressions = function () {
        return _super.prototype._allOfTypes.call(this, [
            "RegularExpressions$RegularExpression"
        ]);
    };
    BaseModel.prototype.allRules = function () {
        return _super.prototype._allOfTypes.call(this, [
            "Microflows$Rule"
        ]);
    };
    BaseModel.prototype.allScheduledEvents = function () {
        return _super.prototype._allOfTypes.call(this, [
            "ScheduledEvents$ScheduledEvent"
        ]);
    };
    BaseModel.prototype.allSnippets = function () {
        return _super.prototype._allOfTypes.call(this, [
            "Pages$Snippet"
        ]);
    };
    BaseModel.prototype.allSystemTextCollections = function () {
        return _super.prototype._allOfTypes.call(this, [
            "Texts$SystemTextCollection"
        ]);
    };
    BaseModel.prototype.allXmlSchemas = function () {
        return _super.prototype._allOfTypes.call(this, [
            "XmlSchemas$XmlSchema"
        ]);
    };
    BaseModel.prototype.findAppServiceActionByQualifiedName = function (qname) {
        return this._resolveName("AppServices$AppServiceAction", qname);
    };
    BaseModel.prototype.findAppServiceActionParameterByQualifiedName = function (qname) {
        return this._resolveName("AppServices$AppServiceActionParameter", qname);
    };
    BaseModel.prototype.findConstantByQualifiedName = function (qname) {
        return this._resolveName("Constants$Constant", qname);
    };
    BaseModel.prototype.findDataSetByQualifiedName = function (qname) {
        return this._resolveName("DataSets$DataSet", qname);
    };
    BaseModel.prototype.findDataSetParameterByQualifiedName = function (qname) {
        return this._resolveName("DataSets$DataSetParameter", qname);
    };
    BaseModel.prototype.findDocumentTemplateByQualifiedName = function (qname) {
        return this._resolveName("DocumentTemplates$DocumentTemplate", qname);
    };
    BaseModel.prototype.findAssociationBaseByQualifiedName = function (qname) {
        return this._resolveName("DomainModels$AssociationBase", qname);
    };
    BaseModel.prototype.findAttributeByQualifiedName = function (qname) {
        return this._resolveName("DomainModels$Attribute", qname);
    };
    BaseModel.prototype.findEntityByQualifiedName = function (qname) {
        return this._resolveName("DomainModels$Entity", qname);
    };
    BaseModel.prototype.findEnumerationByQualifiedName = function (qname) {
        return this._resolveName("Enumerations$Enumeration", qname);
    };
    BaseModel.prototype.findExportMappingByQualifiedName = function (qname) {
        return this._resolveName("ExportMappings$ExportMapping", qname);
    };
    BaseModel.prototype.findImageByQualifiedName = function (qname) {
        return this._resolveName("Images$Image", qname);
    };
    BaseModel.prototype.findImportMappingByQualifiedName = function (qname) {
        return this._resolveName("ImportMappings$ImportMapping", qname);
    };
    BaseModel.prototype.findJavaActionByQualifiedName = function (qname) {
        return this._resolveName("JavaActions$JavaAction", qname);
    };
    BaseModel.prototype.findJavaActionParameterByQualifiedName = function (qname) {
        return this._resolveName("JavaActions$JavaActionParameter", qname);
    };
    BaseModel.prototype.findJsonStructureByQualifiedName = function (qname) {
        return this._resolveName("JsonStructures$JsonStructure", qname);
    };
    BaseModel.prototype.findMenuDocumentByQualifiedName = function (qname) {
        return this._resolveName("Menus$MenuDocument", qname);
    };
    BaseModel.prototype.findMicroflowByQualifiedName = function (qname) {
        return this._resolveName("Microflows$Microflow", qname);
    };
    BaseModel.prototype.findMicroflowParameterByQualifiedName = function (qname) {
        return this._resolveName("Microflows$MicroflowParameter", qname);
    };
    BaseModel.prototype.findRuleByQualifiedName = function (qname) {
        return this._resolveName("Microflows$Rule", qname);
    };
    BaseModel.prototype.findRuleParameterByQualifiedName = function (qname) {
        return this._resolveName("Microflows$RuleParameter", qname);
    };
    BaseModel.prototype.findLayoutByQualifiedName = function (qname) {
        return this._resolveName("Pages$Layout", qname);
    };
    BaseModel.prototype.findLayoutParameterByQualifiedName = function (qname) {
        return this._resolveName("Pages$LayoutParameter", qname);
    };
    BaseModel.prototype.findPageByQualifiedName = function (qname) {
        return this._resolveName("Pages$Page", qname);
    };
    BaseModel.prototype.findSnippetByQualifiedName = function (qname) {
        return this._resolveName("Pages$Snippet", qname);
    };
    BaseModel.prototype.findRegularExpressionByQualifiedName = function (qname) {
        return this._resolveName("RegularExpressions$RegularExpression", qname);
    };
    BaseModel.prototype.findModuleRoleByQualifiedName = function (qname) {
        return this._resolveName("Security$ModuleRole", qname);
    };
    BaseModel.prototype.findUserRoleByQualifiedName = function (qname) {
        return this._resolveName("Security$UserRole", qname);
    };
    BaseModel.prototype.findImportedWebServiceByQualifiedName = function (qname) {
        return this._resolveName("WebServices$ImportedWebService", qname);
    };
    BaseModel.prototype.findXmlSchemaByQualifiedName = function (qname) {
        return this._resolveName("XmlSchemas$XmlSchema", qname);
    };
    return BaseModel;
}(abstract_model_1.AbstractModel));
exports.BaseModel = BaseModel;
