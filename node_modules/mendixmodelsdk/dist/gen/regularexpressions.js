/* tslint:disable */
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var internal = require("../sdk/internal");
exports.StructureVersionInfo = internal.StructureVersionInfo;
var projects_1 = require("./projects");
var regularexpressions;
(function (regularexpressions) {
    /**
     * Interfaces and instance classes for types from the Mendix sub meta model `RegularExpressions`.
     */
    /**
     * See: {@link https://docs.mendix.com/refguide7/regular-expressions relevant section in reference guide}
     */
    var RegularExpression = (function (_super) {
        __extends(RegularExpression, _super);
        function RegularExpression(model, typeName, id, isPartial, container) {
            var _this = _super.call(this, model, typeName, id, isPartial, container) || this;
            _this.__regEx = new internal.PrimitiveProperty(RegularExpression, _this, "regEx", "", internal.PrimitiveTypeEnum.String);
            _this._containmentName = "documents";
            return _this;
        }
        Object.defineProperty(RegularExpression.prototype, "containerAsFolderBase", {
            get: function () { return _super.prototype.getContainerAs.call(this, projects_1.projects.FolderBase); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(RegularExpression.prototype, "regEx", {
            get: function () { return this.__regEx.get(); },
            set: function (newValue) { this.__regEx.set(newValue); },
            enumerable: true,
            configurable: true
        });
        /**
         * Creates a new RegularExpression unit in the SDK and on the server.
         * Expects one argument, the projects.IFolderBase in which this unit is contained.
         */
        RegularExpression.createIn = function (container) {
            return internal.instancehelpers.createUnit(container, RegularExpression);
        };
        RegularExpression.prototype._isByNameReferrable = function () { return true; };
        RegularExpression.prototype._initializeDefaultProperties = function () {
            _super.prototype._initializeDefaultProperties.call(this);
        };
        return RegularExpression;
    }(projects_1.projects.Document));
    RegularExpression.typeName = "RegularExpressions$RegularExpression";
    RegularExpression.versionInfo = new exports.StructureVersionInfo({}, internal.StructureType.ModelUnit);
    regularexpressions.RegularExpression = RegularExpression;
})(regularexpressions = exports.regularexpressions || (exports.regularexpressions = {}));
