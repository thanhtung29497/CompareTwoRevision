/* tslint:disable */
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var internal = require("../sdk/internal");
exports.StructureVersionInfo = internal.StructureVersionInfo;
var utils_1 = require("../sdk/utils");
var projects_1 = require("./projects");
var security;
(function (security) {
    var SecurityLevel = (function (_super) {
        __extends(SecurityLevel, _super);
        function SecurityLevel() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.qualifiedTsTypeName = "security.SecurityLevel";
            return _this;
        }
        return SecurityLevel;
    }(internal.IEnum));
    SecurityLevel.CheckNothing = new SecurityLevel("CheckNothing", {});
    SecurityLevel.CheckFormsAndMicroflows = new SecurityLevel("CheckFormsAndMicroflows", {});
    SecurityLevel.CheckEverything = new SecurityLevel("CheckEverything", {});
    security.SecurityLevel = SecurityLevel;
    /**
     * Warning: this class represents an abstract and non-instantiable concept in the meta model.
     * You should _not_ try to instantiate this class directly, but instantiate one of its concrete/non-abstract sub classes instead.
     * Instantiating this class is possible in pure JavaScript, but there's no guarantee the result will be at all useful.
     */
    var AccessRuleContainerBase = (function (_super) {
        __extends(AccessRuleContainerBase, _super);
        function AccessRuleContainerBase(model, typeName, id, isPartial, unit, container) {
            var _this = _super.call(this, model, typeName, id, isPartial, unit, container) || this;
            _this.__accessRules = new internal.PartListProperty(AccessRuleContainerBase, _this, "accessRules", []);
            if (arguments.length < 4) {
                throw new Error("new AccessRuleContainerBase() cannot be invoked directly, please use 'model.security.createAccessRuleContainerBase()'");
            }
            return _this;
        }
        Object.defineProperty(AccessRuleContainerBase.prototype, "containerAsProjectSecurity", {
            get: function () { return _super.prototype.getContainerAs.call(this, ProjectSecurity); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AccessRuleContainerBase.prototype, "accessRules", {
            get: function () { return this.__accessRules.get(); },
            set: function (newValue) { this.__accessRules.set(newValue); },
            enumerable: true,
            configurable: true
        });
        AccessRuleContainerBase.prototype._initializeDefaultProperties = function () {
            _super.prototype._initializeDefaultProperties.call(this);
        };
        return AccessRuleContainerBase;
    }(internal.Element));
    AccessRuleContainerBase.typeName = "Security$AccessRuleContainerBase";
    AccessRuleContainerBase.versionInfo = new exports.StructureVersionInfo({}, internal.StructureType.Element);
    security.AccessRuleContainerBase = AccessRuleContainerBase;
    /**
     * See: {@link https://docs.mendix.com/refguide7/demo-users relevant section in reference guide}
     */
    var DemoUser = (function (_super) {
        __extends(DemoUser, _super);
        function DemoUser(model, typeName, id, isPartial, unit, container) {
            var _this = _super.call(this, model, typeName, id, isPartial, unit, container) || this;
            _this.__userName = new internal.PrimitiveProperty(DemoUser, _this, "userName", "", internal.PrimitiveTypeEnum.String);
            _this.__password = new internal.PrimitiveProperty(DemoUser, _this, "password", "", internal.PrimitiveTypeEnum.String);
            _this.__entity = new internal.ByNameReferenceProperty(DemoUser, _this, "entity", null, "DomainModels$Entity");
            _this.__userRoles = new internal.ByNameReferenceListProperty(DemoUser, _this, "userRoles", [], "Security$UserRole");
            if (arguments.length < 4) {
                throw new Error("new DemoUser() cannot be invoked directly, please use 'model.security.createDemoUser()'");
            }
            return _this;
        }
        Object.defineProperty(DemoUser.prototype, "containerAsProjectSecurity", {
            get: function () { return _super.prototype.getContainerAs.call(this, ProjectSecurity); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DemoUser.prototype, "userName", {
            get: function () { return this.__userName.get(); },
            set: function (newValue) { this.__userName.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DemoUser.prototype, "password", {
            get: function () { return this.__password.get(); },
            set: function (newValue) { this.__password.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DemoUser.prototype, "entity", {
            get: function () { return this.__entity.get(); },
            set: function (newValue) { this.__entity.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DemoUser.prototype, "entityQualifiedName", {
            get: function () { return this.__entity.qualifiedName(); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DemoUser.prototype, "userRoles", {
            get: function () { return this.__userRoles.get(); },
            set: function (newValue) { this.__userRoles.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DemoUser.prototype, "userRolesQualifiedNames", {
            get: function () { return this.__userRoles.qualifiedNames(); },
            enumerable: true,
            configurable: true
        });
        /**
         * Creates and returns a new DemoUser instance in the SDK and on the server.
         * The new DemoUser will be automatically stored in the 'demoUsers' property
         * of the parent ProjectSecurity element passed as argument.
         */
        DemoUser.createIn = function (container) {
            return internal.instancehelpers.createElement(container, DemoUser, "demoUsers", true);
        };
        /**
         * Creates and returns a new DemoUser instance in the SDK and on the server.
         * Expects one argument: the IModel object the instance will "live on".
         * After creation, assign or add this instance to a property that accepts this kind of objects.
         */
        DemoUser.create = function (model) {
            return internal.instancehelpers.createElement(model, DemoUser);
        };
        DemoUser.prototype._initializeDefaultProperties = function () {
            _super.prototype._initializeDefaultProperties.call(this);
        };
        return DemoUser;
    }(internal.Element));
    DemoUser.typeName = "Security$DemoUser";
    DemoUser.versionInfo = new exports.StructureVersionInfo({}, internal.StructureType.Element);
    security.DemoUser = DemoUser;
    var FileDocumentAccessRuleContainer = (function (_super) {
        __extends(FileDocumentAccessRuleContainer, _super);
        function FileDocumentAccessRuleContainer(model, typeName, id, isPartial, unit, container) {
            var _this = _super.call(this, model, typeName, id, isPartial, unit, container) || this;
            if (arguments.length < 4) {
                throw new Error("new FileDocumentAccessRuleContainer() cannot be invoked directly, please use 'model.security.createFileDocumentAccessRuleContainer()'");
            }
            return _this;
        }
        Object.defineProperty(FileDocumentAccessRuleContainer.prototype, "containerAsProjectSecurity", {
            get: function () { return _super.prototype.getContainerAs.call(this, ProjectSecurity); },
            enumerable: true,
            configurable: true
        });
        /**
         * Creates and returns a new FileDocumentAccessRuleContainer instance in the SDK and on the server.
         * The new FileDocumentAccessRuleContainer will be automatically stored in the 'fileDocumentAccess' property
         * of the parent ProjectSecurity element passed as argument.
         */
        FileDocumentAccessRuleContainer.createIn = function (container) {
            return internal.instancehelpers.createElement(container, FileDocumentAccessRuleContainer, "fileDocumentAccess", false);
        };
        /**
         * Creates and returns a new FileDocumentAccessRuleContainer instance in the SDK and on the server.
         * Expects one argument: the IModel object the instance will "live on".
         * After creation, assign or add this instance to a property that accepts this kind of objects.
         */
        FileDocumentAccessRuleContainer.create = function (model) {
            return internal.instancehelpers.createElement(model, FileDocumentAccessRuleContainer);
        };
        FileDocumentAccessRuleContainer.prototype._initializeDefaultProperties = function () {
            _super.prototype._initializeDefaultProperties.call(this);
        };
        return FileDocumentAccessRuleContainer;
    }(AccessRuleContainerBase));
    FileDocumentAccessRuleContainer.typeName = "Security$FileDocumentAccessRuleContainer";
    FileDocumentAccessRuleContainer.versionInfo = new exports.StructureVersionInfo({}, internal.StructureType.Element);
    security.FileDocumentAccessRuleContainer = FileDocumentAccessRuleContainer;
    var ImageAccessRuleContainer = (function (_super) {
        __extends(ImageAccessRuleContainer, _super);
        function ImageAccessRuleContainer(model, typeName, id, isPartial, unit, container) {
            var _this = _super.call(this, model, typeName, id, isPartial, unit, container) || this;
            if (arguments.length < 4) {
                throw new Error("new ImageAccessRuleContainer() cannot be invoked directly, please use 'model.security.createImageAccessRuleContainer()'");
            }
            return _this;
        }
        Object.defineProperty(ImageAccessRuleContainer.prototype, "containerAsProjectSecurity", {
            get: function () { return _super.prototype.getContainerAs.call(this, ProjectSecurity); },
            enumerable: true,
            configurable: true
        });
        /**
         * Creates and returns a new ImageAccessRuleContainer instance in the SDK and on the server.
         * The new ImageAccessRuleContainer will be automatically stored in the 'imageAccess' property
         * of the parent ProjectSecurity element passed as argument.
         */
        ImageAccessRuleContainer.createIn = function (container) {
            return internal.instancehelpers.createElement(container, ImageAccessRuleContainer, "imageAccess", false);
        };
        /**
         * Creates and returns a new ImageAccessRuleContainer instance in the SDK and on the server.
         * Expects one argument: the IModel object the instance will "live on".
         * After creation, assign or add this instance to a property that accepts this kind of objects.
         */
        ImageAccessRuleContainer.create = function (model) {
            return internal.instancehelpers.createElement(model, ImageAccessRuleContainer);
        };
        ImageAccessRuleContainer.prototype._initializeDefaultProperties = function () {
            _super.prototype._initializeDefaultProperties.call(this);
        };
        return ImageAccessRuleContainer;
    }(AccessRuleContainerBase));
    ImageAccessRuleContainer.typeName = "Security$ImageAccessRuleContainer";
    ImageAccessRuleContainer.versionInfo = new exports.StructureVersionInfo({}, internal.StructureType.Element);
    security.ImageAccessRuleContainer = ImageAccessRuleContainer;
    /**
     * See: {@link https://docs.mendix.com/refguide7/module-role relevant section in reference guide}
     */
    var ModuleRole = (function (_super) {
        __extends(ModuleRole, _super);
        function ModuleRole(model, typeName, id, isPartial, unit, container) {
            var _this = _super.call(this, model, typeName, id, isPartial, unit, container) || this;
            _this.__name = new internal.PrimitiveProperty(ModuleRole, _this, "name", "", internal.PrimitiveTypeEnum.String);
            _this.__description = new internal.PrimitiveProperty(ModuleRole, _this, "description", "", internal.PrimitiveTypeEnum.String);
            if (arguments.length < 4) {
                throw new Error("new ModuleRole() cannot be invoked directly, please use 'model.security.createModuleRole()'");
            }
            return _this;
        }
        Object.defineProperty(ModuleRole.prototype, "containerAsModuleSecurity", {
            get: function () { return _super.prototype.getContainerAs.call(this, ModuleSecurity); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ModuleRole.prototype, "name", {
            get: function () { return this.__name.get(); },
            set: function (newValue) { this.__name.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ModuleRole.prototype, "description", {
            get: function () { return this.__description.get(); },
            set: function (newValue) { this.__description.set(newValue); },
            enumerable: true,
            configurable: true
        });
        /**
         * Creates and returns a new ModuleRole instance in the SDK and on the server.
         * The new ModuleRole will be automatically stored in the 'moduleRoles' property
         * of the parent ModuleSecurity element passed as argument.
         */
        ModuleRole.createIn = function (container) {
            return internal.instancehelpers.createElement(container, ModuleRole, "moduleRoles", true);
        };
        /**
         * Creates and returns a new ModuleRole instance in the SDK and on the server.
         * Expects one argument: the IModel object the instance will "live on".
         * After creation, assign or add this instance to a property that accepts this kind of objects.
         */
        ModuleRole.create = function (model) {
            return internal.instancehelpers.createElement(model, ModuleRole);
        };
        ModuleRole.prototype._isByNameReferrable = function () { return true; };
        ModuleRole.prototype._initializeDefaultProperties = function () {
            _super.prototype._initializeDefaultProperties.call(this);
        };
        return ModuleRole;
    }(internal.Element));
    ModuleRole.typeName = "Security$ModuleRole";
    ModuleRole.versionInfo = new exports.StructureVersionInfo({
        "properties": {
            "name": {
                "public": {
                    "currentValue": true
                }
            }
        },
        "public": {
            "currentValue": true
        }
    }, internal.StructureType.Element);
    security.ModuleRole = ModuleRole;
    /**
     * See: {@link https://docs.mendix.com/refguide7/module-security relevant section in reference guide}
     */
    var ModuleSecurity = (function (_super) {
        __extends(ModuleSecurity, _super);
        function ModuleSecurity(model, typeName, id, isPartial, container) {
            var _this = _super.call(this, model, typeName, id, isPartial, container) || this;
            _this.__moduleRoles = new internal.PartListProperty(ModuleSecurity, _this, "moduleRoles", []);
            _this._containmentName = "moduleSecurity";
            return _this;
        }
        Object.defineProperty(ModuleSecurity.prototype, "containerAsModule", {
            get: function () { return _super.prototype.getContainerAs.call(this, projects_1.projects.Module); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ModuleSecurity.prototype, "moduleRoles", {
            get: function () { return this.__moduleRoles.get(); },
            set: function (newValue) { this.__moduleRoles.set(newValue); },
            enumerable: true,
            configurable: true
        });
        /**
         * Creates a new ModuleSecurity unit in the SDK and on the server.
         * Expects one argument, the projects.IModule in which this unit is contained.
         */
        ModuleSecurity.createIn = function (container) {
            return internal.instancehelpers.createUnit(container, ModuleSecurity);
        };
        ModuleSecurity.prototype._initializeDefaultProperties = function () {
            _super.prototype._initializeDefaultProperties.call(this);
        };
        return ModuleSecurity;
    }(internal.ModelUnit));
    ModuleSecurity.typeName = "Security$ModuleSecurity";
    ModuleSecurity.versionInfo = new exports.StructureVersionInfo({
        "properties": {
            "moduleRoles": {
                "public": {
                    "currentValue": true
                }
            }
        }
    }, internal.StructureType.ModelUnit);
    security.ModuleSecurity = ModuleSecurity;
    /**
     * See: {@link https://docs.mendix.com/refguide7/password-policy relevant section in reference guide}
     */
    var PasswordPolicySettings = (function (_super) {
        __extends(PasswordPolicySettings, _super);
        function PasswordPolicySettings(model, typeName, id, isPartial, unit, container) {
            var _this = _super.call(this, model, typeName, id, isPartial, unit, container) || this;
            _this.__minimumLength = new internal.PrimitiveProperty(PasswordPolicySettings, _this, "minimumLength", 0, internal.PrimitiveTypeEnum.Integer);
            _this.__requireMixedCase = new internal.PrimitiveProperty(PasswordPolicySettings, _this, "requireMixedCase", false, internal.PrimitiveTypeEnum.Boolean);
            _this.__requireSymbol = new internal.PrimitiveProperty(PasswordPolicySettings, _this, "requireSymbol", false, internal.PrimitiveTypeEnum.Boolean);
            _this.__requireDigit = new internal.PrimitiveProperty(PasswordPolicySettings, _this, "requireDigit", false, internal.PrimitiveTypeEnum.Boolean);
            if (arguments.length < 4) {
                throw new Error("new PasswordPolicySettings() cannot be invoked directly, please use 'model.security.createPasswordPolicySettings()'");
            }
            return _this;
        }
        Object.defineProperty(PasswordPolicySettings.prototype, "containerAsProjectSecurity", {
            get: function () { return _super.prototype.getContainerAs.call(this, ProjectSecurity); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PasswordPolicySettings.prototype, "minimumLength", {
            get: function () { return this.__minimumLength.get(); },
            set: function (newValue) { this.__minimumLength.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PasswordPolicySettings.prototype, "requireMixedCase", {
            get: function () { return this.__requireMixedCase.get(); },
            set: function (newValue) { this.__requireMixedCase.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PasswordPolicySettings.prototype, "requireSymbol", {
            get: function () { return this.__requireSymbol.get(); },
            set: function (newValue) { this.__requireSymbol.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PasswordPolicySettings.prototype, "requireDigit", {
            get: function () { return this.__requireDigit.get(); },
            set: function (newValue) { this.__requireDigit.set(newValue); },
            enumerable: true,
            configurable: true
        });
        /**
         * Creates and returns a new PasswordPolicySettings instance in the SDK and on the server.
         * The new PasswordPolicySettings will be automatically stored in the 'passwordPolicySettings' property
         * of the parent ProjectSecurity element passed as argument.
         */
        PasswordPolicySettings.createIn = function (container) {
            return internal.instancehelpers.createElement(container, PasswordPolicySettings, "passwordPolicySettings", false);
        };
        /**
         * Creates and returns a new PasswordPolicySettings instance in the SDK and on the server.
         * Expects one argument: the IModel object the instance will "live on".
         * After creation, assign or add this instance to a property that accepts this kind of objects.
         */
        PasswordPolicySettings.create = function (model) {
            return internal.instancehelpers.createElement(model, PasswordPolicySettings);
        };
        PasswordPolicySettings.prototype._initializeDefaultProperties = function () {
            _super.prototype._initializeDefaultProperties.call(this);
            this.minimumLength = 8;
        };
        return PasswordPolicySettings;
    }(internal.Element));
    PasswordPolicySettings.typeName = "Security$PasswordPolicySettings";
    PasswordPolicySettings.versionInfo = new exports.StructureVersionInfo({}, internal.StructureType.Element);
    security.PasswordPolicySettings = PasswordPolicySettings;
    /**
     * See: {@link https://docs.mendix.com/refguide7/project-security relevant section in reference guide}
     */
    var ProjectSecurity = (function (_super) {
        __extends(ProjectSecurity, _super);
        function ProjectSecurity(model, typeName, id, isPartial, container) {
            var _this = _super.call(this, model, typeName, id, isPartial, container) || this;
            _this.__securityLevel = new internal.EnumProperty(ProjectSecurity, _this, "securityLevel", SecurityLevel.CheckNothing, SecurityLevel);
            _this.__checkSecurity = new internal.PrimitiveProperty(ProjectSecurity, _this, "checkSecurity", false, internal.PrimitiveTypeEnum.Boolean);
            _this.__userRoles = new internal.PartListProperty(ProjectSecurity, _this, "userRoles", []);
            _this.__adminUserName = new internal.PrimitiveProperty(ProjectSecurity, _this, "adminUserName", "", internal.PrimitiveTypeEnum.String);
            _this.__adminPassword = new internal.PrimitiveProperty(ProjectSecurity, _this, "adminPassword", "", internal.PrimitiveTypeEnum.String);
            _this.__adminUserRoleName = new internal.PrimitiveProperty(ProjectSecurity, _this, "adminUserRoleName", "", internal.PrimitiveTypeEnum.String);
            _this.__enableDemoUsers = new internal.PrimitiveProperty(ProjectSecurity, _this, "enableDemoUsers", false, internal.PrimitiveTypeEnum.Boolean);
            _this.__demoUsers = new internal.PartListProperty(ProjectSecurity, _this, "demoUsers", []);
            _this.__enableGuestAccess = new internal.PrimitiveProperty(ProjectSecurity, _this, "enableGuestAccess", false, internal.PrimitiveTypeEnum.Boolean);
            _this.__guestUserRoleName = new internal.PrimitiveProperty(ProjectSecurity, _this, "guestUserRoleName", "", internal.PrimitiveTypeEnum.String);
            _this.__signInMicroflow = new internal.ByNameReferenceProperty(ProjectSecurity, _this, "signInMicroflow", null, "Microflows$Microflow");
            _this.__passwordPolicySettings = new internal.PartProperty(ProjectSecurity, _this, "passwordPolicySettings", null, true);
            _this.__fileDocumentAccess = new internal.PartProperty(ProjectSecurity, _this, "fileDocumentAccess", null, true);
            _this.__imageAccess = new internal.PartProperty(ProjectSecurity, _this, "imageAccess", null, true);
            _this._containmentName = "projectDocuments";
            return _this;
        }
        Object.defineProperty(ProjectSecurity.prototype, "containerAsProject", {
            get: function () { return _super.prototype.getContainerAs.call(this, projects_1.projects.Project); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ProjectSecurity.prototype, "securityLevel", {
            get: function () { return this.__securityLevel.get(); },
            set: function (newValue) { this.__securityLevel.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ProjectSecurity.prototype, "checkSecurity", {
            get: function () { return this.__checkSecurity.get(); },
            set: function (newValue) { this.__checkSecurity.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ProjectSecurity.prototype, "userRoles", {
            get: function () { return this.__userRoles.get(); },
            set: function (newValue) { this.__userRoles.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ProjectSecurity.prototype, "adminUserName", {
            get: function () { return this.__adminUserName.get(); },
            set: function (newValue) { this.__adminUserName.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ProjectSecurity.prototype, "adminPassword", {
            get: function () { return this.__adminPassword.get(); },
            set: function (newValue) { this.__adminPassword.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ProjectSecurity.prototype, "adminUserRoleName", {
            get: function () { return this.__adminUserRoleName.get(); },
            set: function (newValue) { this.__adminUserRoleName.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ProjectSecurity.prototype, "enableDemoUsers", {
            get: function () { return this.__enableDemoUsers.get(); },
            set: function (newValue) { this.__enableDemoUsers.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ProjectSecurity.prototype, "demoUsers", {
            get: function () { return this.__demoUsers.get(); },
            set: function (newValue) { this.__demoUsers.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ProjectSecurity.prototype, "enableGuestAccess", {
            get: function () { return this.__enableGuestAccess.get(); },
            set: function (newValue) { this.__enableGuestAccess.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ProjectSecurity.prototype, "guestUserRoleName", {
            get: function () { return this.__guestUserRoleName.get(); },
            set: function (newValue) { this.__guestUserRoleName.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ProjectSecurity.prototype, "signInMicroflow", {
            get: function () { return this.__signInMicroflow.get(); },
            set: function (newValue) { this.__signInMicroflow.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ProjectSecurity.prototype, "signInMicroflowQualifiedName", {
            get: function () { return this.__signInMicroflow.qualifiedName(); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ProjectSecurity.prototype, "passwordPolicySettings", {
            get: function () { return this.__passwordPolicySettings.get(); },
            set: function (newValue) { this.__passwordPolicySettings.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ProjectSecurity.prototype, "fileDocumentAccess", {
            /**
             * In version 6.0.0: deprecated
             */
            get: function () { return this.__fileDocumentAccess.get(); },
            set: function (newValue) { this.__fileDocumentAccess.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ProjectSecurity.prototype, "imageAccess", {
            /**
             * In version 6.0.0: deprecated
             */
            get: function () { return this.__imageAccess.get(); },
            set: function (newValue) { this.__imageAccess.set(newValue); },
            enumerable: true,
            configurable: true
        });
        /**
         * Creates a new ProjectSecurity unit in the SDK and on the server.
         * Expects one argument, the projects.IProject in which this unit is contained.
         */
        ProjectSecurity.createIn = function (container) {
            return internal.instancehelpers.createUnit(container, ProjectSecurity);
        };
        ProjectSecurity.prototype._initializeDefaultProperties = function () {
            _super.prototype._initializeDefaultProperties.call(this);
            this.adminUserName = "MxAdmin";
            this.checkSecurity = true;
            this.fileDocumentAccess = FileDocumentAccessRuleContainer.create(this.model);
            this.imageAccess = ImageAccessRuleContainer.create(this.model);
            this.passwordPolicySettings = PasswordPolicySettings.create(this.model);
            this.securityLevel = SecurityLevel.CheckNothing;
        };
        return ProjectSecurity;
    }(projects_1.projects.ProjectDocument));
    ProjectSecurity.typeName = "Security$ProjectSecurity";
    ProjectSecurity.versionInfo = new exports.StructureVersionInfo({
        "properties": {
            "userRoles": {
                "public": {
                    "currentValue": true
                }
            },
            "passwordPolicySettings": {
                "required": {
                    "currentValue": true
                }
            },
            "fileDocumentAccess": {
                "deprecated": "6.0.0",
                "deprecationMessage": "Specifying project-level access rules for entity 'System.FileDocument' is deprecated. Please create a specialized entity for each use case and configure access rules for those entities instead.",
                "required": {
                    "currentValue": true
                }
            },
            "imageAccess": {
                "deprecated": "6.0.0",
                "deprecationMessage": "Specifying project-level access rules for entity 'System.Image' is deprecated. Please create a specialized entity for each use case and configure access rules for those entities instead.",
                "required": {
                    "currentValue": true
                }
            }
        }
    }, internal.StructureType.ModelUnit);
    security.ProjectSecurity = ProjectSecurity;
    /**
     * See: {@link https://docs.mendix.com/refguide7/user-role relevant section in reference guide}
     */
    var UserRole = (function (_super) {
        __extends(UserRole, _super);
        function UserRole(model, typeName, id, isPartial, unit, container) {
            var _this = _super.call(this, model, typeName, id, isPartial, unit, container) || this;
            _this.__guid = new internal.PrimitiveProperty(UserRole, _this, "guid", "", internal.PrimitiveTypeEnum.Guid);
            _this.__name = new internal.PrimitiveProperty(UserRole, _this, "name", "", internal.PrimitiveTypeEnum.String);
            _this.__description = new internal.PrimitiveProperty(UserRole, _this, "description", "", internal.PrimitiveTypeEnum.String);
            _this.__moduleRoles = new internal.ByNameReferenceListProperty(UserRole, _this, "moduleRoles", [], "Security$ModuleRole");
            _this.__manageAllRoles = new internal.PrimitiveProperty(UserRole, _this, "manageAllRoles", false, internal.PrimitiveTypeEnum.Boolean);
            _this.__manageableRoles = new internal.ByNameReferenceListProperty(UserRole, _this, "manageableRoles", [], "Security$UserRole");
            _this.__manageUsersWithoutRoles = new internal.PrimitiveProperty(UserRole, _this, "manageUsersWithoutRoles", false, internal.PrimitiveTypeEnum.Boolean);
            _this.__checkSecurity = new internal.PrimitiveProperty(UserRole, _this, "checkSecurity", false, internal.PrimitiveTypeEnum.Boolean);
            if (arguments.length < 4) {
                throw new Error("new UserRole() cannot be invoked directly, please use 'model.security.createUserRole()'");
            }
            return _this;
        }
        Object.defineProperty(UserRole.prototype, "containerAsProjectSecurity", {
            get: function () { return _super.prototype.getContainerAs.call(this, ProjectSecurity); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(UserRole.prototype, "guid", {
            get: function () { return this.__guid.get(); },
            set: function (newValue) { this.__guid.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(UserRole.prototype, "name", {
            get: function () { return this.__name.get(); },
            set: function (newValue) { this.__name.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(UserRole.prototype, "description", {
            get: function () { return this.__description.get(); },
            set: function (newValue) { this.__description.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(UserRole.prototype, "moduleRoles", {
            get: function () { return this.__moduleRoles.get(); },
            set: function (newValue) { this.__moduleRoles.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(UserRole.prototype, "moduleRolesQualifiedNames", {
            get: function () { return this.__moduleRoles.qualifiedNames(); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(UserRole.prototype, "manageAllRoles", {
            get: function () { return this.__manageAllRoles.get(); },
            set: function (newValue) { this.__manageAllRoles.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(UserRole.prototype, "manageableRoles", {
            get: function () { return this.__manageableRoles.get(); },
            set: function (newValue) { this.__manageableRoles.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(UserRole.prototype, "manageableRolesQualifiedNames", {
            get: function () { return this.__manageableRoles.qualifiedNames(); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(UserRole.prototype, "manageUsersWithoutRoles", {
            get: function () { return this.__manageUsersWithoutRoles.get(); },
            set: function (newValue) { this.__manageUsersWithoutRoles.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(UserRole.prototype, "checkSecurity", {
            get: function () { return this.__checkSecurity.get(); },
            set: function (newValue) { this.__checkSecurity.set(newValue); },
            enumerable: true,
            configurable: true
        });
        /**
         * Creates and returns a new UserRole instance in the SDK and on the server.
         * The new UserRole will be automatically stored in the 'userRoles' property
         * of the parent ProjectSecurity element passed as argument.
         */
        UserRole.createIn = function (container) {
            return internal.instancehelpers.createElement(container, UserRole, "userRoles", true);
        };
        /**
         * Creates and returns a new UserRole instance in the SDK and on the server.
         * Expects one argument: the IModel object the instance will "live on".
         * After creation, assign or add this instance to a property that accepts this kind of objects.
         */
        UserRole.create = function (model) {
            return internal.instancehelpers.createElement(model, UserRole);
        };
        UserRole.prototype._isByNameReferrable = function () { return true; };
        UserRole.prototype._initializeDefaultProperties = function () {
            _super.prototype._initializeDefaultProperties.call(this);
            this.checkSecurity = true;
            this.guid = utils_1.utils.randomUuid();
        };
        return UserRole;
    }(internal.Element));
    UserRole.typeName = "Security$UserRole";
    UserRole.versionInfo = new exports.StructureVersionInfo({
        "properties": {
            "name": {
                "public": {
                    "currentValue": true
                }
            }
        },
        "public": {
            "currentValue": true
        }
    }, internal.StructureType.Element);
    security.UserRole = UserRole;
})(security = exports.security || (exports.security = {}));
