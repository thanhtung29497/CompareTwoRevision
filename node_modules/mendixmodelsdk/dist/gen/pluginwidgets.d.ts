import * as internal from "../sdk/internal";
export import StructureVersionInfo = internal.StructureVersionInfo;
import { pages } from "./pages";
export declare namespace pluginwidgets {
    /**
     * Interfaces and instance classes for types from the Mendix sub meta model `PluginWidgets`.
     */
    /**
     * In version 7.0.1: introduced
     */
    interface IPluginWidget extends pages.IWidget {
        model: IModel;
        containerAsDataView: pages.IDataView;
        containerAsDivContainer: pages.IDivContainer;
        containerAsGroupBox: pages.IGroupBox;
        containerAsHeader: pages.IHeader;
        containerAsLayout: pages.ILayout;
        containerAsLayoutCallArgument: pages.ILayoutCallArgument;
        containerAsLayoutGridColumn: pages.ILayoutGridColumn;
        containerAsListView: pages.IListView;
        containerAsListViewTemplate: pages.IListViewTemplate;
        containerAsNavigationListItem: pages.INavigationListItem;
        containerAsScrollContainerRegion: pages.IScrollContainerRegion;
        containerAsSnippet: pages.ISnippet;
        containerAsSplitPane: pages.ISplitPane;
        containerAsTabPage: pages.ITabPage;
        containerAsTableCell: pages.ITableCell;
        containerAsTemplateGridContents: pages.ITemplateGridContents;
        containerAsVerticalFlow: pages.IVerticalFlow;
        load(): PluginWidget;
        load(callback: (element: PluginWidget) => void, forceRefresh?: boolean): any;
    }
    /**
     * In version 7.0.1: introduced
     */
    class PluginWidget extends pages.Widget implements IPluginWidget {
        static typeName: string;
        static versionInfo: StructureVersionInfo;
        model: IModel;
        readonly containerAsDataView: pages.DataView;
        readonly containerAsDivContainer: pages.DivContainer;
        readonly containerAsGroupBox: pages.GroupBox;
        readonly containerAsHeader: pages.Header;
        readonly containerAsLayout: pages.Layout;
        readonly containerAsLayoutCallArgument: pages.LayoutCallArgument;
        readonly containerAsLayoutGridColumn: pages.LayoutGridColumn;
        readonly containerAsListView: pages.ListView;
        readonly containerAsListViewTemplate: pages.ListViewTemplate;
        readonly containerAsNavigationListItem: pages.NavigationListItem;
        readonly containerAsScrollContainerRegion: pages.ScrollContainerRegion;
        readonly containerAsSnippet: pages.Snippet;
        readonly containerAsSplitPane: pages.SplitPane;
        readonly containerAsTabPage: pages.TabPage;
        readonly containerAsTableCell: pages.TableCell;
        readonly containerAsTemplateGridContents: pages.TemplateGridContents;
        readonly containerAsVerticalFlow: pages.VerticalFlow;

        pluginWidgetName: string;

        pluginWidgetVersion: string;
        constructor(model: internal.AbstractModel, typeName: string, id: string, isPartial: boolean, unit: internal.ModelUnit, container: internal.AbstractElement);
        /**
         * Creates and returns a new PluginWidget instance in the SDK and on the server.
         * The new PluginWidget will be automatically stored in the 'footerWidget' property
         * of the parent pages.DataView element passed as argument.
         *
         * Warning! Can only be used on models with the following Mendix meta model versions:
         *  7.0.1
         */
        static createInDataViewUnderFooterWidget(container: pages.DataView): PluginWidget;
        /**
         * Creates and returns a new PluginWidget instance in the SDK and on the server.
         * The new PluginWidget will be automatically stored in the 'widget' property
         * of the parent pages.DataView element passed as argument.
         *
         * Warning! Can only be used on models with the following Mendix meta model versions:
         *  7.0.1
         */
        static createInDataViewUnderWidget(container: pages.DataView): PluginWidget;
        /**
         * Creates and returns a new PluginWidget instance in the SDK and on the server.
         * The new PluginWidget will be automatically stored in the 'widget' property
         * of the parent pages.DivContainer element passed as argument.
         *
         * Warning! Can only be used on models with the following Mendix meta model versions:
         *  7.0.1
         */
        static createInDivContainerUnderWidget(container: pages.DivContainer): PluginWidget;
        /**
         * Creates and returns a new PluginWidget instance in the SDK and on the server.
         * The new PluginWidget will be automatically stored in the 'widget' property
         * of the parent pages.GroupBox element passed as argument.
         *
         * Warning! Can only be used on models with the following Mendix meta model versions:
         *  7.0.1
         */
        static createInGroupBoxUnderWidget(container: pages.GroupBox): PluginWidget;
        /**
         * Creates and returns a new PluginWidget instance in the SDK and on the server.
         * The new PluginWidget will be automatically stored in the 'leftWidget' property
         * of the parent pages.Header element passed as argument.
         *
         * Warning! Can only be used on models with the following Mendix meta model versions:
         *  7.0.1
         */
        static createInHeaderUnderLeftWidget(container: pages.Header): PluginWidget;
        /**
         * Creates and returns a new PluginWidget instance in the SDK and on the server.
         * The new PluginWidget will be automatically stored in the 'rightWidget' property
         * of the parent pages.Header element passed as argument.
         *
         * Warning! Can only be used on models with the following Mendix meta model versions:
         *  7.0.1
         */
        static createInHeaderUnderRightWidget(container: pages.Header): PluginWidget;
        /**
         * Creates and returns a new PluginWidget instance in the SDK and on the server.
         * The new PluginWidget will be automatically stored in the 'widget' property
         * of the parent pages.Layout element passed as argument.
         *
         * Warning! Can only be used on models with the following Mendix meta model versions:
         *  7.0.1
         */
        static createInLayoutUnderWidget(container: pages.Layout): PluginWidget;
        /**
         * Creates and returns a new PluginWidget instance in the SDK and on the server.
         * The new PluginWidget will be automatically stored in the 'widget' property
         * of the parent pages.LayoutCallArgument element passed as argument.
         *
         * Warning! Can only be used on models with the following Mendix meta model versions:
         *  7.0.1
         */
        static createInLayoutCallArgumentUnderWidget(container: pages.LayoutCallArgument): PluginWidget;
        /**
         * Creates and returns a new PluginWidget instance in the SDK and on the server.
         * The new PluginWidget will be automatically stored in the 'widget' property
         * of the parent pages.LayoutGridColumn element passed as argument.
         *
         * Warning! Can only be used on models with the following Mendix meta model versions:
         *  7.0.1
         */
        static createInLayoutGridColumnUnderWidget(container: pages.LayoutGridColumn): PluginWidget;
        /**
         * Creates and returns a new PluginWidget instance in the SDK and on the server.
         * The new PluginWidget will be automatically stored in the 'widget' property
         * of the parent pages.ListView element passed as argument.
         *
         * Warning! Can only be used on models with the following Mendix meta model versions:
         *  7.0.1
         */
        static createInListViewUnderWidget(container: pages.ListView): PluginWidget;
        /**
         * Creates and returns a new PluginWidget instance in the SDK and on the server.
         * The new PluginWidget will be automatically stored in the 'widget' property
         * of the parent pages.ListViewTemplate element passed as argument.
         *
         * Warning! Can only be used on models with the following Mendix meta model versions:
         *  7.0.1
         */
        static createInListViewTemplateUnderWidget(container: pages.ListViewTemplate): PluginWidget;
        /**
         * Creates and returns a new PluginWidget instance in the SDK and on the server.
         * The new PluginWidget will be automatically stored in the 'widget' property
         * of the parent pages.NavigationListItem element passed as argument.
         *
         * Warning! Can only be used on models with the following Mendix meta model versions:
         *  7.0.1
         */
        static createInNavigationListItemUnderWidget(container: pages.NavigationListItem): PluginWidget;
        /**
         * Creates and returns a new PluginWidget instance in the SDK and on the server.
         * The new PluginWidget will be automatically stored in the 'widget' property
         * of the parent pages.ScrollContainerRegion element passed as argument.
         *
         * Warning! Can only be used on models with the following Mendix meta model versions:
         *  7.0.1
         */
        static createInScrollContainerRegionUnderWidget(container: pages.ScrollContainerRegion): PluginWidget;
        /**
         * Creates and returns a new PluginWidget instance in the SDK and on the server.
         * The new PluginWidget will be automatically stored in the 'widget' property
         * of the parent pages.Snippet element passed as argument.
         *
         * Warning! Can only be used on models with the following Mendix meta model versions:
         *  7.0.1
         */
        static createInSnippetUnderWidget(container: pages.Snippet): PluginWidget;
        /**
         * Creates and returns a new PluginWidget instance in the SDK and on the server.
         * The new PluginWidget will be automatically stored in the 'firstWidget' property
         * of the parent pages.SplitPane element passed as argument.
         *
         * Warning! Can only be used on models with the following Mendix meta model versions:
         *  7.0.1
         */
        static createInSplitPaneUnderFirstWidget(container: pages.SplitPane): PluginWidget;
        /**
         * Creates and returns a new PluginWidget instance in the SDK and on the server.
         * The new PluginWidget will be automatically stored in the 'secondWidget' property
         * of the parent pages.SplitPane element passed as argument.
         *
         * Warning! Can only be used on models with the following Mendix meta model versions:
         *  7.0.1
         */
        static createInSplitPaneUnderSecondWidget(container: pages.SplitPane): PluginWidget;
        /**
         * Creates and returns a new PluginWidget instance in the SDK and on the server.
         * The new PluginWidget will be automatically stored in the 'widget' property
         * of the parent pages.TabPage element passed as argument.
         *
         * Warning! Can only be used on models with the following Mendix meta model versions:
         *  7.0.1
         */
        static createInTabPageUnderWidget(container: pages.TabPage): PluginWidget;
        /**
         * Creates and returns a new PluginWidget instance in the SDK and on the server.
         * The new PluginWidget will be automatically stored in the 'widget' property
         * of the parent pages.TableCell element passed as argument.
         *
         * Warning! Can only be used on models with the following Mendix meta model versions:
         *  7.0.1
         */
        static createInTableCellUnderWidget(container: pages.TableCell): PluginWidget;
        /**
         * Creates and returns a new PluginWidget instance in the SDK and on the server.
         * The new PluginWidget will be automatically stored in the 'widget' property
         * of the parent pages.TemplateGridContents element passed as argument.
         *
         * Warning! Can only be used on models with the following Mendix meta model versions:
         *  7.0.1
         */
        static createInTemplateGridContentsUnderWidget(container: pages.TemplateGridContents): PluginWidget;
        /**
         * Creates and returns a new PluginWidget instance in the SDK and on the server.
         * The new PluginWidget will be automatically stored in the 'widgets' property
         * of the parent pages.VerticalFlow element passed as argument.
         *
         * Warning! Can only be used on models with the following Mendix meta model versions:
         *  7.0.1
         */
        static createInVerticalFlowUnderWidgets(container: pages.VerticalFlow): PluginWidget;
        /**
         * Creates and returns a new PluginWidget instance in the SDK and on the server.
         * Expects one argument: the IModel object the instance will "live on".
         * After creation, assign or add this instance to a property that accepts this kind of objects.
         */
        static create(model: IModel): PluginWidget;

    }
}
import { IModel } from "./base-model";
