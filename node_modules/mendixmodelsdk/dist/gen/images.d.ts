import * as internal from "../sdk/internal";
export import StructureVersionInfo = internal.StructureVersionInfo;
import { projects } from "./projects";
export declare namespace images {
    /**
     * Interfaces and instance classes for types from the Mendix sub meta model `Images`.
     */
    interface IImage extends internal.IElement {
        model: IModel;
        containerAsImageCollection: IImageCollection;
        name: string;
        load(): Image;
        load(callback: (element: Image) => void, forceRefresh?: boolean): any;
    }
    class Image extends internal.Element implements IImage {
        static typeName: string;
        static versionInfo: StructureVersionInfo;
        model: IModel;
        readonly containerAsImageCollection: ImageCollection;

        name: string;

        /**
         * ?
         */
        imageData: string;
        constructor(model: internal.AbstractModel, typeName: string, id: string, isPartial: boolean, unit: internal.ModelUnit, container: internal.AbstractElement);
        /**
         * Creates and returns a new Image instance in the SDK and on the server.
         * The new Image will be automatically stored in the 'images' property
         * of the parent ImageCollection element passed as argument.
         */
        static createIn(container: ImageCollection): Image;
        /**
         * Creates and returns a new Image instance in the SDK and on the server.
         * Expects one argument: the IModel object the instance will "live on".
         * After creation, assign or add this instance to a property that accepts this kind of objects.
         */
        static create(model: IModel): Image;


    }
    /**
     * See: {@link https://docs.mendix.com/refguide7/images relevant section in reference guide}
     */
    interface IImageCollection extends projects.IDocument {
        model: IModel;
        containerAsFolderBase: projects.IFolderBase;
        images: internal.IList<IImage>;
        load(): ImageCollection;
        load(callback: (element: ImageCollection) => void, forceRefresh?: boolean): any;
    }
    /**
     * See: {@link https://docs.mendix.com/refguide7/images relevant section in reference guide}
     */
    class ImageCollection extends projects.Document implements IImageCollection {
        static typeName: string;
        static versionInfo: StructureVersionInfo;
        model: IModel;
        readonly containerAsFolderBase: projects.FolderBase;

        images: internal.IList<Image>;
        constructor(model: internal.AbstractModel, typeName: string, id: string, isPartial: boolean, container: projects.IFolderBase);
        /**
         * Creates a new ImageCollection unit in the SDK and on the server.
         * Expects one argument, the projects.IFolderBase in which this unit is contained.
         */
        static createIn(container: projects.IFolderBase): ImageCollection;

    }
}
import { IModel } from "./base-model";
