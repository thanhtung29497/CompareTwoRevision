import * as internal from "./internal";
/**
 * The `configuration` module allows the Model SDK user to configure
 * how to communicate with the Model API Server;
 * in particular w.r.t.: authentication, success/error handling, etc.
 */
export declare namespace configuration {
    /**
     * The credentials with which a trusted backend client (such as sprintr) connects to the Model API Server.
     */
    interface IBackendCredentials {
        username: string;
        password: string;
        /** The OpenID on behalf which the trusted backend service operates. */
        openid?: string;
    }
    interface ISdkCredentials {
        username: string;
        apikey: string;
    }
    /**
     * All the details of the connection that's been set up to the Model API Server.
     */
    interface ISdkConfig {
        credentials?: IBackendCredentials | ISdkCredentials;
        endPoint?: string;
        transportation?: internal.ITransportation;
        client?: internal.IModelApiClient;
    }
    interface ICreateWorkingCopyParameters {
        name: string;
        /**
         * Mendix project id. Needed for deployment and team server commits
         */
        projectId?: string;
        description?: string;
        avatarUrl?: string;
        /**
         * Path to the (template) MPK file.
         */
        template: string;
        /**
         * Indicates whether the working copy should be long-lived.
         * This parameter can only be set to true when the Mendix project id is set and the Model SDK is used from a trusted backend
         *  - this excludes regular SDK users for the moment.
         */
        longLived?: boolean;
        /**
         * Indicates whether the new working copy should be the default working copy associated with the provided projectId.
         * This means that this working copy will be opened in the Web Modeler for the given project.
         * This parameter can only be set to true when the Mendix project id is set and the Model SDK is used from a trusted backend
         *  - this excludes regular SDK users for the moment.
         */
        setAsDefault?: boolean;
        /**
         * Indicates whether the working copy should allow read-only access for everybody.
         */
        publicReadOnly?: boolean;
        /**
         * If this WC is created from a TeamServer checkout, the BaseRevision / BaseBranch can be used by the Desktop Modeler during merge
         * @type {number}
         */
        teamServerBaseRevision?: number;
        /**
         * If this WC is created from a TeamServer checkout, the BaseRevision / BaseBranch can be used by the Desktop Modeler during merge
         * @type {number}
         */
        teamServerBaseBranch?: string;
    }
    function assertBackendAccess(config: ISdkConfig): void;
    function checkWorkingCopyId(workingCopyId: string): void;
    function checkCallbacks(callback: Function, errorCallback: Function): void;
}
