import { ICheck as realICheck, ICheckIssue as realICheckIssue } from "./checks-types";
import { runChecksOn as realRunChecksOn, makeChecksResolver as realMakeChecksResolver } from "./checks-runner";
import { makeQueryResolver as realMakeQueryResolver } from "./queries";
import { validateSyntax as realValidateSyntax } from "./name-util";
export declare namespace checks {
    type ICheck = realICheck;
    type ICheckIssue = realICheckIssue;
    const runChecksOn: typeof realRunChecksOn;
    const makeChecksResolver: typeof realMakeChecksResolver;
    const makeQueryResolver: typeof realMakeQueryResolver;
    /**
     * Validates the name syntactically without looking at the context (so no uniqueness check).
     * @returns {string} with error message or null in which case name is valid.
     */
    const validateNameSyntax: typeof realValidateSyntax;
}
