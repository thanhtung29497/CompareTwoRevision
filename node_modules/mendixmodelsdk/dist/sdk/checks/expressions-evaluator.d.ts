import { expressionsTypes as expressions } from "../../gen/expressions-types";
import { IStructure } from "../internal/structures";
import { IQueryResolver } from "./queries";
import { Context } from "./context";
/**
 * Union/sum type to be able to recurse over types other than MxExpression.
 * This should match with ExpressionsTypesHelper#evaluatableTypes in the Model SDK generator.
 */
export declare type Evaluatable = expressions.MxExpression | expressions.MxFeatureCall;
export declare function evaluateExpression(expr: Evaluatable, structure: IStructure, queryResolver: IQueryResolver, context?: Context): any;
/**
 * Checks whether the argument is "nothing", i.e. either undefined or null.
 */
export declare function isNothing(arg: any): boolean;
