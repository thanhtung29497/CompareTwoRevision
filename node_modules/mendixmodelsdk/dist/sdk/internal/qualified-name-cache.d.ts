import { AbstractElement } from "./elements";
import { AbstractModel } from "./abstract-model";
import { IStructure } from "./structures";
/**
 * Manages a cached map [qualified name: string] -> list of structures,
 * with the possibility to retrieve (resolve) based on qualified name.
 *
 * Used to speed up resolution of by-(qualified-)name references.
 */
export default class QualifiedNameCache {


    constructor(_model: AbstractModel);
    resolve(typeName: string, qualifiedName: string): AbstractElement;
    /**
     * Recursively adds this structure and its children to the elements cache.
     */
    addStructureToCache(structure: IStructure): void;
    removeStructureFromCache(structure: IStructure): void;
    /**
     * Updates the cache as far as it is affected by the rename of this element.
     * Child entries are updated automatically as well.
     */
    processNameChange(structure: IStructure): void;
    private addElementToCache;
}
