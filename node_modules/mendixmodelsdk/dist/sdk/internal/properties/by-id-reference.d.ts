import { AbstractProperty } from "./abstract-property";
import { AbstractElement } from "../elements";
import { ByIdReference } from "../references";
/**
 * Property value that references a (model) element by id.
 */
export declare class ByIdReferenceProperty<T extends AbstractElement> extends AbstractProperty<T, ByIdReference<T>> {
    parent: AbstractElement;
    initialize(value: T): ByIdReference<T>;
    get(): T;
    set(value: T): void;
    updateWithRawValue(value: string): void;
    resolveReferences(): void;
    onChange(newValue: T, oldValue: T): void;
    updateElementContainer(): void;
    dispose(): void;

    deepCopyInto(clone: any, idMap: any, unresolvedIdentifierFixers: any): void;
}
