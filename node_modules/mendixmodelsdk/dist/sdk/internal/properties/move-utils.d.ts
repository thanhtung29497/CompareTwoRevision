/**
 * @returns whether indices.asSet equals [0, 1, ..., (indices.length - 1)].
 */
export declare function isPermutation(indices: number[]): boolean;
export interface IRun {
    count: number;
    value: number;
}
export declare function runLenghtEncode(values: number[], max?: number): IRun[] | void;
/**
 * @returns the move action expressed by the given indices, expressed as an array `[fromIndex, toIndex]`,
 * 	or `null` if it's not a move.
 */
export declare function detectMove(indices: number[]): number[] | void;
/**
 * @returns whether the members of the two given arrays are identical (using object comparison),
 * and occur in the same order.
 */
export declare function areIdentical<T>(left: T[], right: T[]): boolean;
