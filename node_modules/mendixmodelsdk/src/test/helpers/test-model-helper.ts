import {TestModel, TestModelSdkClient, common} from "../test-index";
import {TestModelStubClient} from "../helpers/stub-model-client";
import {domainmodels_simple} from "../gen/domainmodels_simple";
import {IModel} from "../gen/base-model";


export function createSdkClient(version: string): TestModelSdkClient {
	return TestModel.createSdkClient({
		client: new TestModelStubClient({}, version)
	});
}


export type EntityCallbackFunc =
	(entity: domainmodels_simple.IEntity, domainModel: domainmodels_simple.IDomainModel, model: IModel) => void;
export type EntityCallbackFuncLoaded =
	(entity: domainmodels_simple.Entity, domainModel: domainmodels_simple.DomainModel, model: IModel) => void;

export function withEntity(mxVersion: string, done: common.IErrorCallback, doFunc: EntityCallbackFunc) {
	createSdkClient(mxVersion).openWorkingCopy("1", model => {
		const domainModel = model.allDomainModels()[0];
		const entity = domainModel.entities[0];
		doFunc(entity, domainModel, model);
	}, done);
};

export function withEntityLoaded(mxVersion: string, done: common.IErrorCallback, doFunc: EntityCallbackFuncLoaded) {
	createSdkClient(mxVersion).openWorkingCopy("1", model => {
		model.allDomainModels()[0].load(domainModel => {
			const entity = domainModel.entities[0];
			doFunc(entity, domainModel, model);
		});
	}, done);
};

