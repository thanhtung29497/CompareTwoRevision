/* tslint:disable */

import * as internal from "../../sdk/internal";
export import StructureVersionInfo = internal.StructureVersionInfo;


export namespace testmodel {


	/**
	 * Interfaces and instance classes for types from the Mendix sub meta model `TestModel`.
	 */


	export interface IProject extends internal.IStructuralUnit {
		model: IModel;
		/**
		 * In version 6.0.1: introduced
		 */
		domainModel: domainmodels_simple.IDomainModel;
		pages: internal.IList<pages_simple.IPage>;
		/**
		 * This property is required and cannot be set to null.
		 */
		navigation: navigation_simple.INavigation;
		/**
		 * This property is required and cannot be set to null.
		 */
		unitWithParserProperties: parsing_simple.IUnitWithParserProperties;
	}

	export class Project extends internal.StructuralUnit implements IProject {
		public static typeName: string = "TestModel$Project";
		public static versionInfo: StructureVersionInfo = new StructureVersionInfo({
			"properties" : {
				"domainModel" : {
					"introduced" : "6.0.1"
				},
				"navigation" : {
					"required" : {
						"currentValue" : true
					}
				},
				"unitWithParserProperties" : {
					"required" : {
						"currentValue" : true
					}
				}
			}
		}, internal.StructureType.StructuralUnit);
		model: IModel;


		private __domainModel: internal.StructuralChildProperty<domainmodels_simple.IDomainModel> =
			new internal.StructuralChildProperty<domainmodels_simple.IDomainModel>(Project, this, "domainModel", null);
		/**
		 * In version 6.0.1: introduced
		 */
		public get domainModel(): domainmodels_simple.IDomainModel { return this.__domainModel.get(); }
		public set domainModel(newValue: domainmodels_simple.IDomainModel) { this.__domainModel.set(newValue); }
		private __pages: internal.StructuralChildListProperty<pages_simple.IPage> =
			new internal.StructuralChildListProperty<pages_simple.IPage>(Project, this, "pages", []);
		public get pages(): internal.IList<pages_simple.IPage> { return this.__pages.get(); }
		public set pages(newValue: internal.IList<pages_simple.IPage>) { this.__pages.set(newValue); }
		private __navigation: internal.StructuralChildProperty<navigation_simple.INavigation> =
			new internal.StructuralChildProperty<navigation_simple.INavigation>(Project, this, "navigation", null);
		public get navigation(): navigation_simple.INavigation { return this.__navigation.get(); }
		public set navigation(newValue: navigation_simple.INavigation) { this.__navigation.set(newValue); }
		private __unitWithParserProperties: internal.StructuralChildProperty<parsing_simple.IUnitWithParserProperties> =
			new internal.StructuralChildProperty<parsing_simple.IUnitWithParserProperties>(Project, this, "unitWithParserProperties", null);
		public get unitWithParserProperties(): parsing_simple.IUnitWithParserProperties { return this.__unitWithParserProperties.get(); }
		public set unitWithParserProperties(newValue: parsing_simple.IUnitWithParserProperties) { this.__unitWithParserProperties.set(newValue); }

		constructor(model: internal.AbstractModel, typeName: string, id: string, isPartial: boolean, container: internal.IStructuralUnit) {
			super(model, typeName, id, isPartial, container);
			this._containmentName = "";
		}

		_initializeDefaultProperties() {
			super._initializeDefaultProperties();
		}

	}
}

import {domainmodels_simple} from "./domainmodels_simple";
import {navigation_simple} from "./navigation_simple";
import {pages_simple} from "./pages_simple";
import {parsing_simple} from "./parsing_simple";

import {IModel} from "./base-model";
