/* tslint:disable */

import * as internal from "../sdk/internal";
export import StructureVersionInfo = internal.StructureVersionInfo;


export namespace datatypes {

	export class DataTypeKind extends internal.IEnum {
		public static Unknown: DataTypeKind = new DataTypeKind("Unknown", { });
		public static Void: DataTypeKind = new DataTypeKind("Void", { });
		public static Empty: DataTypeKind = new DataTypeKind("Empty", { });
		public static Boolean: DataTypeKind = new DataTypeKind("Boolean", { });
		public static Binary: DataTypeKind = new DataTypeKind("Binary", { });
		public static Decimal: DataTypeKind = new DataTypeKind("Decimal", { });
		public static DecimalRange: DataTypeKind = new DataTypeKind("DecimalRange", { });
		public static Integer: DataTypeKind = new DataTypeKind("Integer", { });
		public static IntegerRange: DataTypeKind = new DataTypeKind("IntegerRange", { });
		public static Float: DataTypeKind = new DataTypeKind("Float", { });
		public static FloatRange: DataTypeKind = new DataTypeKind("FloatRange", { });
		public static DateTime: DataTypeKind = new DataTypeKind("DateTime", { });
		public static DateTimeRange: DataTypeKind = new DataTypeKind("DateTimeRange", { });
		public static String: DataTypeKind = new DataTypeKind("String", { });
		public static Enumeration: DataTypeKind = new DataTypeKind("Enumeration", { });
		public static Object: DataTypeKind = new DataTypeKind("Object", { });
		public static List: DataTypeKind = new DataTypeKind("List", { });
		protected qualifiedTsTypeName: string = "datatypes.DataTypeKind";
	}


	/**
	 * Interfaces and instance classes for types from the Mendix sub meta model `DataTypes`.
	 */

}


import {IModel} from "./base-model";
