/* tslint:disable */

import * as internal from "../sdk/internal";
export import StructureVersionInfo = internal.StructureVersionInfo;

import {projects} from "./projects";

export namespace regularexpressions {


	/**
	 * Interfaces and instance classes for types from the Mendix sub meta model `RegularExpressions`.
	 */


	/**
	 * See: {@link https://docs.mendix.com/refguide7/regular-expressions relevant section in reference guide}
	 */
	export interface IRegularExpression extends projects.IDocument {
		model: IModel;
		containerAsFolderBase: projects.IFolderBase;
		load(): RegularExpression;
		load(callback: (element: RegularExpression) => void, forceRefresh?: boolean);
	}

	/**
	 * See: {@link https://docs.mendix.com/refguide7/regular-expressions relevant section in reference guide}
	 */
	export class RegularExpression extends projects.Document implements IRegularExpression {
		public static typeName: string = "RegularExpressions$RegularExpression";
		public static versionInfo: StructureVersionInfo = new StructureVersionInfo({ }, internal.StructureType.ModelUnit);
		model: IModel;

		get containerAsFolderBase() { return super.getContainerAs<projects.FolderBase>(projects.FolderBase); }

		private __regEx: internal.PrimitiveProperty<string> =
			new internal.PrimitiveProperty<string>(RegularExpression, this, "regEx", "", internal.PrimitiveTypeEnum.String);
		public get regEx(): string { return this.__regEx.get(); }
		public set regEx(newValue: string) { this.__regEx.set(newValue); }

		constructor(model: internal.AbstractModel, typeName: string, id: string, isPartial: boolean, container: projects.IFolderBase) {
			super(model, typeName, id, isPartial, container);
			this._containmentName = "documents";
		}

		/**
		 * Creates a new RegularExpression unit in the SDK and on the server.
		 * Expects one argument, the projects.IFolderBase in which this unit is contained.
		 */
		public static createIn(container: projects.IFolderBase): RegularExpression {
			return internal.instancehelpers.createUnit(container, RegularExpression);
		}

		_isByNameReferrable() { return true; }

		_initializeDefaultProperties() {
			super._initializeDefaultProperties();
		}

	}
}


import {IModel} from "./base-model";
